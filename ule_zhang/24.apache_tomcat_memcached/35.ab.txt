超实用压力测试工具－ab工具
http://www.jianshu.com/p/43d04d8baaf7

=========================================================================================================================
=========================================================================================================================
=========================================================================================================================
1.概念:
吞吐率（Requests per second）
概念：服务器并发处理能力的量化描述，单位是reqs/s，指的是某个并发用户数下单位时间内处理的请求数。
某个并发用户数下单位时间内能处理的最大请求数，称之为最大吞吐率。
计算公式：总请求数 / 处理完成这些请求数所花费的时间，即
Request per second = Complete requests / Time taken for tests

并发连接数（The number of concurrent connections）
概念：某个时刻服务器所接受的请求数目，简单的讲，就是一个会话。

并发用户数（The number of concurrent users，Concurrency Level）
概念：要注意区分这个概念和并发连接数之间的区别，一个用户可能同时会产生多个会话，也即连接数。

用户平均请求等待时间（Time per request）
计算公式：处理完成所有请求数所花费的时间/ （总请求数 / 并发用户数），即
Time per request = Time taken for tests /（ Complete requests / Concurrency Level）

服务器平均请求等待时间（Time per request: across all concurrent requests）
计算公式：处理完成所有请求数所花费的时间 / 总请求数，即
Time taken for / testsComplete requests
可以看到，它是吞吐率的倒数。
同时，它也=用户平均请求等待时间/并发用户数，即
Time per request / Concurrency Level
=========================================================================================================================
=========================================================================================================================
=========================================================================================================================
2.ab测试1:
ab -n 1000 -c 100 http://127.0.0.1/index.html
[root@web11 ~]# ab -n 1000 -c 100 http://127.0.0.1/index.html

Benchmarking 127.0.0.1 (be patient)
Completed 100 requests
Completed 200 requests
Completed 300 requests
Completed 400 requests
Completed 500 requests
Completed 600 requests
Completed 700 requests
Completed 800 requests
Completed 900 requests
Completed 1000 requests
Finished 1000 requests

Server Software:        nginx/1.10.1
Server Hostname:        127.0.0.1
Server Port:            80

Document Path:          /index.html
Document Length:        243 bytes

Concurrency Level:      100
Time taken for tests:   0.245 seconds
Complete requests:      1000
Failed requests:        0
Write errors:           0
Total transferred:      489250 bytes
HTML transferred:       250290 bytes
Requests per second:    4075.46 [#/sec] (mean)
Time per request:       24.537 [ms] (mean)
Time per request:       0.245 [ms] (mean, across all concurrent requests)
Transfer rate:          1947.19 [Kbytes/sec] received

这段表示网络上消耗的时间的分解:
Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        3    8   3.1      8      16
Processing:     3   14   4.9     14      26
Waiting:        2   12   4.5     11      24
Total:         13   23   4.0     23      31

这段是每个请求处理时间的分布情况:
50%的处理时间在23ms内
66%的处理时间在25ms内，
重要的是看90%的处理时间。
Percentage of the requests served within a certain time (ms)
  50%     23
  66%     25
  75%     26
  80%     26
  90%     28
  95%     29
  98%     30
  99%     31
 100%     31 (longest request)
=========================================================================================================================
=========================================================================================================================
=========================================================================================================================
3.分析:
Concurrency Level: 100
//并发请求数

Time taken for tests: 50.872 seconds
//整个测试持续的时间

Complete requests: 1000
//完成的请求数

Failed requests: 0
//失败的请求数

Total transferred: 13701482 bytes
//整个场景中的网络传输量

HTML transferred: 13197000 bytes
//整个场景中的HTML内容传输量

Requests per second: 19.66 [#/sec] (mean)
//吞吐率，大家最关心的指标之一，相当于 LR 中的每秒事务数，后面括号中的 mean 表示这是一个平均值

Time per request: 5087.180 [ms] (mean)
//用户平均请求等待时间，大家最关心的指标之二，相当于 LR 中的平均事务响应时间，后面括号中的 mean 表示这是一个平均值

Time per request: 50.872 [ms] (mean, across all concurrent requests)
//服务器平均请求处理时间，大家最关心的指标之三

Transfer rate: 263.02 [Kbytes/sec] received
//平均每秒网络上的流量，可以帮助排除是否存在网络流量过大导致响应时间延长的问题

=========================================================================================================================
=========================================================================================================================
=========================================================================================================================
4.ab测试2:
有时候进行压力测试需要用户登录，怎么办？
请参考以下步骤：

先用账户和密码登录后，用开发者工具找到标识这个会话的Cookie值（Session ID）记下来
如果只用到一个Cookie，那么只需键入命令：
ab -n 100 -C key＝value http://test.com/

如果需要多个Cookie，就直接设Header：
ab -n 100 -H "Cookie: Key1=Value1; Key2=Value2" http://test.com/
